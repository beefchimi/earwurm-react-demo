/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const TictactoeLazyImport = createFileRoute('/tictactoe')()
const MemoryLazyImport = createFileRoute('/memory')()
const HackerNewsLazyImport = createFileRoute('/hacker-news')()
const ConwayLazyImport = createFileRoute('/conway')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const TictactoeLazyRoute = TictactoeLazyImport.update({
  id: '/tictactoe',
  path: '/tictactoe',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/tictactoe.lazy').then((d) => d.Route))

const MemoryLazyRoute = MemoryLazyImport.update({
  id: '/memory',
  path: '/memory',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/memory.lazy').then((d) => d.Route))

const HackerNewsLazyRoute = HackerNewsLazyImport.update({
  id: '/hacker-news',
  path: '/hacker-news',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/hacker-news.lazy').then((d) => d.Route))

const ConwayLazyRoute = ConwayLazyImport.update({
  id: '/conway',
  path: '/conway',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/conway.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/conway': {
      id: '/conway'
      path: '/conway'
      fullPath: '/conway'
      preLoaderRoute: typeof ConwayLazyImport
      parentRoute: typeof rootRoute
    }
    '/hacker-news': {
      id: '/hacker-news'
      path: '/hacker-news'
      fullPath: '/hacker-news'
      preLoaderRoute: typeof HackerNewsLazyImport
      parentRoute: typeof rootRoute
    }
    '/memory': {
      id: '/memory'
      path: '/memory'
      fullPath: '/memory'
      preLoaderRoute: typeof MemoryLazyImport
      parentRoute: typeof rootRoute
    }
    '/tictactoe': {
      id: '/tictactoe'
      path: '/tictactoe'
      fullPath: '/tictactoe'
      preLoaderRoute: typeof TictactoeLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/conway': typeof ConwayLazyRoute
  '/hacker-news': typeof HackerNewsLazyRoute
  '/memory': typeof MemoryLazyRoute
  '/tictactoe': typeof TictactoeLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/conway': typeof ConwayLazyRoute
  '/hacker-news': typeof HackerNewsLazyRoute
  '/memory': typeof MemoryLazyRoute
  '/tictactoe': typeof TictactoeLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/conway': typeof ConwayLazyRoute
  '/hacker-news': typeof HackerNewsLazyRoute
  '/memory': typeof MemoryLazyRoute
  '/tictactoe': typeof TictactoeLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/conway' | '/hacker-news' | '/memory' | '/tictactoe'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/conway' | '/hacker-news' | '/memory' | '/tictactoe'
  id: '__root__' | '/' | '/conway' | '/hacker-news' | '/memory' | '/tictactoe'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  ConwayLazyRoute: typeof ConwayLazyRoute
  HackerNewsLazyRoute: typeof HackerNewsLazyRoute
  MemoryLazyRoute: typeof MemoryLazyRoute
  TictactoeLazyRoute: typeof TictactoeLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  ConwayLazyRoute: ConwayLazyRoute,
  HackerNewsLazyRoute: HackerNewsLazyRoute,
  MemoryLazyRoute: MemoryLazyRoute,
  TictactoeLazyRoute: TictactoeLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/conway",
        "/hacker-news",
        "/memory",
        "/tictactoe"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/conway": {
      "filePath": "conway.lazy.tsx"
    },
    "/hacker-news": {
      "filePath": "hacker-news.lazy.tsx"
    },
    "/memory": {
      "filePath": "memory.lazy.tsx"
    },
    "/tictactoe": {
      "filePath": "tictactoe.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
